#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26


void countLetterFrequency(const char *text, int frequency[ALPHABET_SIZE]) {
    for (int i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            char letter = tolower(text[i]);
            frequency[letter - 'a']++;
        }
    }
}


void letterFrequencyAttack(const char *ciphertext, int topN) {
    int frequency[ALPHABET_SIZE] = {0};

 
    countLetterFrequency(ciphertext, frequency);


    int maxFrequencyIndex = 0;
    for (int i = 1; i < ALPHABET_SIZE; i++) {
        if (frequency[i] > frequency[maxFrequencyIndex]) {
            maxFrequencyIndex = i;
        }
    }

  
    int additiveKey = (maxFrequencyIndex + 26 - ('e' - 'a')) % 26;

 
    printf("\nTop %d Possible Plaintexts:\n", topN);
    for (int i = 0; i < topN; i++) {
        char plaintext[1000];

        for (int j = 0; ciphertext[j] != '\0'; j++) {
            if (isalpha(ciphertext[j])) {
                char letter = tolower(ciphertext[j]);
                char decryptedLetter = 'a' + (letter - 'a' + 26 - additiveKey) % 26;
                plaintext[j] = isupper(ciphertext[j]) ? toupper(decryptedLetter) : decryptedLetter;
            } else {
                plaintext[j] = ciphertext[j];
            }
        }
        plaintext[strlen(ciphertext)] = '\0';

        printf("%2d. Additive Key: %d   Plaintext: %s\n", i + 1, additiveKey, plaintext);

       
        additiveKey = (additiveKey + 1) % 26;
    }
}

int main() {
    char ciphertext[1000];
    int topN;

    
    printf("Enter the ciphertext: ");
    fgets(ciphertext, sizeof(ciphertext), stdin);
    ciphertext[strcspn(ciphertext, "\n")] = '\0'; // Remove newline character from input

    printf("Enter the number of possible plaintexts to display: ");
    scanf("%d", &topN);


    letterFrequencyAttack(ciphertext, topN);

    return 0;
}
