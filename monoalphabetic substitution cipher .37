#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26
void countLetterFrequency(const char *text, int frequency[ALPHABET_SIZE]) {
    for (int i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            char letter = tolower(text[i]);
            frequency[letter - 'a']++;
        }
    }
}
void letterFrequencyAttack(const char *ciphertext, int topN) {
    int frequency[ALPHABET_SIZE] = {0};
    countLetterFrequency(ciphertext, frequency);
    int mapping[ALPHABET_SIZE];
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        mapping[i] = i;
    }
    for (int i = 0; i < ALPHABET_SIZE - 1; i++) {
        for (int j = 0; j < ALPHABET_SIZE - i - 1; j++) {
            if (frequency[j] < frequency[j + 1]) {
              
                int tempFreq = frequency[j];
                frequency[j] = frequency[j + 1];
                frequency[j + 1] = tempFreq;
                int tempMapping = mapping[j];
                mapping[j] = mapping[j + 1];
                mapping[j + 1] = tempMapping;
            }
        }
    }
    printf("\nTop %d Possible Plaintexts:\n", topN);
    for (int i = 0; i < topN; i++) {
        char possibleKey = mapping[i] + 'a';
        char plaintext[1000];
        for (int j = 0; ciphertext[j] != '\0'; j++) {
            if (isalpha(ciphertext[j])) {
                char letter = tolower(ciphertext[j]);
                char decryptedLetter = 'a' + (letter - possibleKey + 26) % 26;
                plaintext[j] = isupper(ciphertext[j]) ? toupper(decryptedLetter) : decryptedLetter;
            } else {
                plaintext[j] = ciphertext[j];
            }
        }
        plaintext[strlen(ciphertext)] = '\0';

        printf("%2d. Key: %c   Plaintext: %s\n", i + 1, possibleKey, plaintext);
    }
}

int main() {
    char ciphertext[1000];
    int topN;
    printf("Enter the ciphertext: ");
    fgets(ciphertext, sizeof(ciphertext), stdin);
    ciphertext[strcspn(ciphertext, "\n")] = '\0';
    printf("Enter the number of possible plaintexts to display: ");
    scanf("%d", &topN);
    letterFrequencyAttack(ciphertext, topN);

    return 0;
}
